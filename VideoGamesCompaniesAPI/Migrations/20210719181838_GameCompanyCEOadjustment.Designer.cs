// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VideoGamesCompaniesAPI.Entities;

namespace VideoGamesCompaniesAPI.Migrations
{
    [DbContext(typeof(GameCompanyDbContext))]
    [Migration("20210719181838_GameCompanyCEOadjustment")]
    partial class GameCompanyCEOadjustment
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VideoGamesCompaniesAPI.Entities.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GameCompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("GameCompanyId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("VideoGamesCompaniesAPI.Entities.GameCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CEO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HqAddressId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("HqAddressId")
                        .IsUnique();

                    b.ToTable("GameCompanies");
                });

            modelBuilder.Entity("VideoGamesCompaniesAPI.Entities.HqAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("HqAddresses");
                });

            modelBuilder.Entity("VideoGamesCompaniesAPI.Entities.Game", b =>
                {
                    b.HasOne("VideoGamesCompaniesAPI.Entities.GameCompany", "GameCompany")
                        .WithMany("Games")
                        .HasForeignKey("GameCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameCompany");
                });

            modelBuilder.Entity("VideoGamesCompaniesAPI.Entities.GameCompany", b =>
                {
                    b.HasOne("VideoGamesCompaniesAPI.Entities.HqAddress", "HqAddress")
                        .WithOne("GameCompany")
                        .HasForeignKey("VideoGamesCompaniesAPI.Entities.GameCompany", "HqAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HqAddress");
                });

            modelBuilder.Entity("VideoGamesCompaniesAPI.Entities.GameCompany", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("VideoGamesCompaniesAPI.Entities.HqAddress", b =>
                {
                    b.Navigation("GameCompany");
                });
#pragma warning restore 612, 618
        }
    }
}
